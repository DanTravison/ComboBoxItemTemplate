<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:objectmodel="clr-namespace:ObjectModel"
             xmlns:viewmodels="clr-namespace:ComboBoxItemTemplate.ViewModels"
             xmlns:input="clr-namespace:Syncfusion.Maui.Inputs;assembly=Syncfusion.Maui.Inputs"
             xmlns:views="clr-namespace:ComboBoxItemTemplate.Views"
             x:Class="ComboBoxItemTemplate.Views.MainPage"
             x:DataType="viewmodels:MainViewModel">

    <Grid ColumnDefinitions="Auto, Auto, Auto"
          RowDefinitions="Auto, Auto, *"
          HorizontalOptions="Center"
          VerticalOptions="Center"
          ColumnSpacing="10"
          >
        <Label Grid.Column="0" 
               Grid.Row="0"
               HorizontalTextAlignment="End"
               VerticalTextAlignment="Center"
               Text="Select An Item"/>
        
        <views:ComboBox Grid.Column="1"
                        Grid.Row="0"
                        ItemsSource="{Binding Commands, Mode=OneWay}"
                        ItemTemplate="{StaticResource CommandTemplateSelector}"
                        SelectedItem="{Binding SelectedCommand, Mode=TwoWay}"
                        SelectionMode="Single"
                        DisplayMemberPath="Text"
                        WidthRequest="200"
                        IsEditable="False"
                        IsClearButtonVisible="False"
                        DropDownBackground="{StaticResource PopupBackgroundColor}"
                        IsAutoFit="True"
                        LayoutContainer="{Binding Source={x:Reference LayoutContainer1}}"
                        />
         <Button Command="{Binding RefreshCommand}"
                Grid.Column="2"
                Grid.Row="0"
                Text="{Binding RefreshCommand.Text}"
                ToolTipProperties.Text="{Binding RefreshCommand.Description}"
                />

        <Label Grid.Column="0" 
               Grid.Row="1"
               HorizontalTextAlignment="End"
               VerticalTextAlignment="Center"
               Text="Show footer and header"/>

        <views:ComboBox Grid.Column="1"
                        Grid.Row="1"
                        ItemsSource="{Binding Commands, Mode=OneWay}"
                        ItemTemplate="{StaticResource CommandTemplateSelector}"
                        SelectedItem="{Binding SelectedCommand, Mode=TwoWay}"
                        SelectionMode="Single"
                        DisplayMemberPath="Text"
                        WidthRequest="200"
                        IsEditable="False"
                        IsClearButtonVisible="False"
                        DropDownBackground="{StaticResource PopupBackgroundColor}"
                        IsAutoFit="True"
                        LayoutContainer="{Binding Source={x:Reference LayoutContainer2}}"
                        ShowDropdownHeaderView="True"
                        ShowDropdownFooterView="True"
                        >
            <views:ComboBox.DropdownHeaderView>
                <Label Text="Header Text"
                       TextColor="Black"
                       HorizontalTextAlignment="Center"
                       VerticalTextAlignment="Center"
                       FontAttributes="Bold"
                       FontSize="16"
                       />
            </views:ComboBox.DropdownHeaderView>
            <views:ComboBox.DropdownFooterView>
                <Label Text="Footer Text"
                       TextColor="Black"
                       HorizontalTextAlignment="Center"
                       VerticalTextAlignment="Center"
                       FontSize="24"
                       />
            </views:ComboBox.DropdownFooterView>
         </views:ComboBox>

        <!-- Provide a Layout class for ComboBox to use to measure its dropdown content. 
             The container will temporarily populated with the combobox's ItemSource and ItemTemplate
             to measure the size of the dropdown content.-->
        <VerticalStackLayout x:Name="LayoutContainer1"
                             Grid.Row="2" 
                             Grid.Column="0"
                             Grid.ColumnSpan="3"
                             Margin="0"
                             Spacing="0"
                             Padding="0"
                             />

        <!-- NOTE: Attempting to share the same LayoutContainer breaks the second combobox.
             Use a new instance to work around
        -->
        <VerticalStackLayout x:Name="LayoutContainer2"
                             Grid.Row="2" 
                             Grid.Column="0"
                             Grid.ColumnSpan="3"
                             Margin="0"
                             Spacing="0"
                             Padding="0"
                             />
    </Grid>

</ContentPage>
